<!--******************************************************************************
 * VERITAS:    Copyright (c) 2017 Veritas Technologies LLC.
 * This software is licensed as described in the file LICENSE which is part of this repository
 *****************************************************************************/
-->

@model IEnumerable<BEArcus.WebApp.Models.Job>

@{
    Layout = null;
}
@{
    string mediaServer = ViewBag.Mediaserver;
    IEnumerable<string> Name = Model.Select(o => o.Name).Distinct();
    Name = Name.Concat(new[] { "All" });
    IEnumerable<string> BE_id = Model.Select(o => o.be_id).Distinct();
    BE_id = BE_id.Concat(new[] { "All" });
    IEnumerable<string> TaskName = Model.Select(o => o.TaskName).Distinct();
    TaskName = TaskName.Concat(new[] { "All" });
    IEnumerable<string> JobType = Model.Select(o => o.JobType).Distinct();
    JobType = JobType.Concat(new[] { "All" });
    IEnumerable<string> Status = Model.Select(o => o.Status).Distinct();
    Status = Status.Concat(new[] { "All" });
    IEnumerable<string> SelectionSummary = Model.Select(o => o.SelectionSummary).Distinct();
    SelectionSummary = SelectionSummary.Concat(new[] { "All" });
}
@using (Html.BeginForm("Job", "MediaServer", new { media = ViewBag.Mediaserver }, FormMethod.Post))
{

    <div class="table-responsive" id="job@(mediaServer)">
        <div style="background-color:#414142;"><h4 style="color:white;"> &nbsp;&nbsp;&nbsp;Job</h4></div>
        <table class="table">
            <tr style="background-color:#E6EAEE">
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                    @Html.DropDownList("JobName", new SelectList(Name), "Select", new { @class = mediaServer, onchange = "loadJobName(this);" })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TaskName)
                    @Html.DropDownList("TaskName", new SelectList(TaskName), "Select", new { @class = mediaServer, onchange = "loadTaskName(this);" })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.JobType)
                    @Html.DropDownList("JobType", new SelectList(JobType), "Select", new { @class = mediaServer, onchange = "loadJobType(this);" })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                    @Html.DropDownList("Status", new SelectList(Status), "Select", new { @class = mediaServer, onchange = "loadStatus(this);" })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SelectionSummary)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Priority)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TaskName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.JobType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SelectionSummary)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Priority)
                    </td>

                </tr>
            }

        </table>
    </div>

    <script>
        function loadJobName(elem) {
            var opt = document.activeElement.getAttribute('class')
            $("#job" + opt).load("/MediaServer/GetJobName", { Name: elem.value, media: opt,jobs:@Html.Raw(Json.Encode(ViewBag.Jobs))});
        }
        function loadTaskName(elem) {
            var opt = document.activeElement.getAttribute('class')
            $("#job" + opt).load("/MediaServer/GetTaskName", { TaskName: elem.value, media: opt,jobs: @Html.Raw(Json.Encode(ViewBag.Alerts)) });
        }
        function loadJobType(elem) {
            var opt = document.activeElement.getAttribute('class')
            $("#job" + opt).load("/MediaServer/GetJobType", { JobType: elem.value, media: opt,jobs: @Html.Raw(Json.Encode(ViewBag.Alerts))});
        }
        function loadStatus(elem) {
            var opt = document.activeElement.getAttribute('class')
            $("#job" + opt).load("/MediaServer/GetStatus", { Status: elem.value, media: opt,jobs: @Html.Raw(Json.Encode(ViewBag.Alerts)) });
        }
    </script>
}