<!--******************************************************************************
 * VERITAS:    Copyright (c) 2017 Veritas Technologies LLC.
 * This software is licensed as described in the file LICENSE which is part of this repository
 *****************************************************************************/
-->

@model IEnumerable<BEArcus.WebApp.Models.MediaServer>
@{
    Layout = "~/Views/Shared/_LayoutMonitor.cshtml";
}
@{ var customers = Model.Select(o => o.CustomerName).Distinct();
    List<BEArcus.WebApp.Models.Alert> alerts = ViewBag.Alerts;
    List<BEArcus.WebApp.Models.JobHistory> failedJobs = ViewBag.FailedJobs;
    List<BEArcus.WebApp.Models.JobHistory> missedJobs = ViewBag.MissedJobs;
    List<BEArcus.WebApp.Models.JobHistory> succeededJobs = ViewBag.SucceededJobs;
    List<BEArcus.WebApp.Models.JobHistory> succeededWithExceptionsJobs = ViewBag.SucceededWithExceptions;
    var jobs = ViewBag.Jobs;}
@{
    var i = 1;
}
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
@using (Html.BeginForm("FilteredImportantEvents", "MediaServer", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div style="height:100vh; background-color:#F4F5F6; padding-left:20px; padding-right:20px;" id="customer">
        <div style="width:900px;">
            <div class="form-group" style="display:inline">
                <label for="TimeFilter" style="display:inline-block"> Important Events of last :</label>
                <select class="form-control" name="TimeFilter" id="TimeFilter" onchange="this.form.submit();" style="display:inline">
                    <option value="-24">24 hrs</option>
                    <option value="-48">48 hrs</option>
                    <option value="-72">72 hrs</option>
                    <option value="-168">1 Week</option>
                    <option value="-730">1 Month</option>
                    <option value="All">All</option>
                    <option selected>Select</option>
                </select>
                Download the Agent Application from here @Html.ActionLink("Download", "Download", "Account")
            </div>
        </div>
        <br />
        <div id="customerTable" class="row" style="width:1100px; padding-left: 20px;">
            @foreach (var customer in customers)
            {
                <div style="background-color:white; padding-left:10px; padding-top:10px;" class="row">
                    <div class="panel-group" style="float:left; display:inline; width:700px;">
                        <div class="panel panel-default">
                            <div class="panel-heading"><h3><span class="glyphicon glyphicon-user" style="margin-right:25px; margin-left: 25px;"></span>@customer</h3></div>
                            <div class="panel-body">
                                <div class="table-responsive">
                                    <table class="table" id="table@(i)">
                                        <tr>
                                            <th>
                                                @Html.DisplayName("Backup Exec Server")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Backup Exec Version")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Last Update")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Critical Alerts")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Failed Jobs")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Missed Jobs")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Successful Jobs")
                                            </th>
                                            <th>
                                                @Html.DisplayName("Jobs Completed with Exceptions")
                                            </th>
                                            <th></th>
                                        </tr>
                                        @{var mediaServer = Model.Where(o => o.CustomerName.Equals(customer));}
                                        @foreach (var media in mediaServer)
                                        {
                                            <tr>
                                                <td>
                                                    <label>@media.Name</label>
                                                </td>
                                                <td>
                                                    <label>@media.Version.Substring(0, @media.Version.IndexOf(" "))</label>
                                                    @*<label>@media.Version</label>*@
                                                </td>
                                                <td>
                                                    <label>@media.LastUpdate</label>
                                                </td>
                                                <td>
                                                    <a href='@Url.Action("FilterPanel", "MediaServer",new { id = customer, mediaServer=media.Name,befilter="CriticalAlert" })'>@Html.Label(alerts.Where(o => o.MediaServerName.Equals(media.Name)).Count().ToString())</a>
                                                </td>
                                                <td>
                                                    <a href='@Url.Action("FilterPanel", "MediaServer",new { id = customer, mediaServer=media.Name,befilter="FailedJob" })'>@Html.Label(failedJobs.Where(o => o.MediaServerName.Equals(media.Name)).Count().ToString())</a>
                                                </td>
                                                <td>
                                                    <a href='@Url.Action("FilterPanel", "MediaServer",new { id = customer, mediaServer=media.Name,befilter="MissedJob" })'>@Html.Label(missedJobs.Where(o => o.MediaServerName.Equals(media.Name)).Count().ToString())</a>
                                                </td>
                                                <td>
                                                    <a href='@Url.Action("FilterPanel", "MediaServer",new { id = customer, mediaServer=media.Name,befilter="SuccessfulJob" })'>@Html.Label(succeededJobs.Where(o => o.MediaServerName.Equals(media.Name)).Count().ToString())</a>
                                                </td>
                                                <td>
                                                    <a href='@Url.Action("FilterPanel", "MediaServer",new { id = customer, mediaServer=media.Name,befilter="CompletedWithExceptionJob" })'>@Html.Label(succeededWithExceptionsJobs.Where(o => o.MediaServerName.Equals(media.Name)).Count().ToString())</a>
                                                </td>
                                            </tr>
                                        }
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id=@i name="piechart" style="width: 400px; height: 300px; float:left; display:inline;"></div>
                </div>

                                                i++;
                                            }
        </div>
    </div>
    <script type="text/javascript">
        google.charts.load("current", { packages: ["corechart"] });
        google.charts.setOnLoadCallback(drawChart);
        function drawChart() {

            for(j=1;j<=@i-1;j++){
                var Failed=0;
                var Missed=0;
                var Succeeded=0;
                var Exception=0;
                var rows=document.getElementById("table"+j).rows.length;

                for(k=1;k<=rows-1;k++){
                    Failed=Failed+parseInt(document.getElementById("table"+j).rows[k].cells[4].textContent);
                    Missed=Missed+parseInt(document.getElementById("table"+j).rows[k].cells[5].textContent);
                    Succeeded=Succeeded+parseInt(document.getElementById("table"+j).rows[k].cells[6].textContent);
                    Exception=Exception+parseInt(document.getElementById("table"+j).rows[k].cells[7].textContent);
                }

                var data = google.visualization.arrayToDataTable([
                  ['Task', 'Hours per Day'],
                  ['Failed', Failed],
                  ['Missed',Missed],
                  ['Succeeded',Succeeded],
                  ['Succeeded with Exception',Exception]
                ]);

                var options = {
                    title: 'Job Status for all Backup Exec Media Servers',
                    is3D: true,
                    legend: 'none',
                    pieSliceText: 'none',
                    colors:['#FF0000','#800080','#008000','#FFFF00']

                };


                var chart = new google.visualization.PieChart(document.getElementById(j));
                chart.draw(data, options);
            }
        }

        function loadFilter() {
            $("#customer").load("/MediaServer/FilteredImportantEvents", { mediaServer:"Media", alerts:@Html.Raw(Json.Encode(ViewBag.Alerts)),failedJobs:@Html.Raw(Json.Encode(ViewBag.FailedJobs)),missedJobs:@Html.Raw(Json.Encode(ViewBag.MissedJobs)),succeededJobs:@Html.Raw(Json.Encode(ViewBag.SucceededJobs)),succeededWithExceptionsJobs:@Html.Raw(Json.Encode(ViewBag.SucceededWithExceptions)),hrsSelected:$("#TimeFilter").val() });
        }

    </script>
                                            }
